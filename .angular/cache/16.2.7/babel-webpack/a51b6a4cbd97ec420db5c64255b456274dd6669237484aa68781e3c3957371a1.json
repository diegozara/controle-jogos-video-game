{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport class SaldoComponent {\n  constructor() {\n    this.value = 0;\n    this.donationEvent = new EventEmitter();\n    this.backgroundColor = 'blue';\n  }\n  ngOnChanges() {\n    if (this.value > 10000) setTimeout(() => {\n      this.donationEvent.emit(true);\n    }, 3000);\n  }\n  ngOnInit() {}\n  onDblClickBalance(color) {\n    this.backgroundColor = color;\n  }\n  getBackgroundColor() {\n    return this.backgroundColor;\n  }\n  static #_ = this.ɵfac = function SaldoComponent_Factory(t) {\n    return new (t || SaldoComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SaldoComponent,\n    selectors: [[\"app-saldo\"]],\n    inputs: {\n      value: \"value\"\n    },\n    outputs: {\n      donationEvent: \"donationEvent\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 5,\n    consts: [[1, \"row\"], [\"id\", \"div-painel\", 1, \"col\", \"s12\", \"m6\", \"offset-m3\", \"card-painel\", \"white-text\", 3, \"ngClass\"]],\n    template: function SaldoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"currency\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.backgroundColor);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 2, ctx.value, \"BRL\"), \" \");\n      }\n    },\n    dependencies: [i1.NgClass, i1.CurrencyPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","SaldoComponent","constructor","value","donationEvent","backgroundColor","ngOnChanges","setTimeout","emit","ngOnInit","onDblClickBalance","color","getBackgroundColor","_","_2","selectors","inputs","outputs","features","i0","ɵɵNgOnChangesFeature","decls","vars","consts","template","SaldoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","ɵɵpipeBind2"],"sources":["C:\\Users\\diego\\OneDrive\\Área de Trabalho\\Pós Graduacao\\Frameworks Web\\controle-jogos-video-game\\src\\app\\saldo\\saldo.component.ts","C:\\Users\\diego\\OneDrive\\Área de Trabalho\\Pós Graduacao\\Frameworks Web\\controle-jogos-video-game\\src\\app\\saldo\\saldo.component.html"],"sourcesContent":["import { Component, EventEmitter,Input,OnChanges,OnInit,Output,SimpleChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-saldo',\n  templateUrl: './saldo.component.html',\n  styleUrls: ['./saldo.component.css']\n})\nexport class SaldoComponent implements OnInit, OnChanges{\n  @Input() value:number = 0;\n  @Output() donationEvent = new EventEmitter<boolean>();\n  backgroundColor = 'blue';\n\n  constructor(){}\n\n  ngOnChanges(): void {\n    if(this.value > 10000)\n    setTimeout(() => {\n      this.donationEvent.emit(true);\n  }, 3000);\n      \n  }\n\n  ngOnInit(): void {}\n\n  onDblClickBalance(color: string){\n    this.backgroundColor = color;\n  }\n   \n  getBackgroundColor(){\n    return this.backgroundColor;\n  }\n\n}\n","<div class=\"row\">\n  <div\n    class=\"col s12 m6 offset-m3 card-painel white-text\"\n    id=\"div-painel\"\n    [ngClass]=\"this.backgroundColor\"\n  >\n    {{ this.value | currency : \"BRL\" }}\n  </div>\n</div>\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAmD,eAAe;;;AAOlG,OAAM,MAAOC,cAAc;EAKzBC,YAAA;IAJS,KAAAC,KAAK,GAAU,CAAC;IACf,KAAAC,aAAa,GAAG,IAAIJ,YAAY,EAAW;IACrD,KAAAK,eAAe,GAAG,MAAM;EAEV;EAEdC,WAAWA,CAAA;IACT,IAAG,IAAI,CAACH,KAAK,GAAG,KAAK,EACrBI,UAAU,CAAC,MAAK;MACd,IAAI,CAACH,aAAa,CAACI,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;EAER;EAEAC,QAAQA,CAAA,GAAU;EAElBC,iBAAiBA,CAACC,KAAa;IAC7B,IAAI,CAACN,eAAe,GAAGM,KAAK;EAC9B;EAEAC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACP,eAAe;EAC7B;EAAC,QAAAQ,CAAA,G;qBAvBUZ,cAAc;EAAA;EAAA,QAAAa,EAAA,G;UAAdb,cAAc;IAAAc,SAAA;IAAAC,MAAA;MAAAb,KAAA;IAAA;IAAAc,OAAA;MAAAb,aAAA;IAAA;IAAAc,QAAA,GAAAC,EAAA,CAAAC,oBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3BP,EAAA,CAAAS,cAAA,aAAiB;QAMbT,EAAA,CAAAU,MAAA,GACF;;QAAAV,EAAA,CAAAW,YAAA,EAAM;;;QAHJX,EAAA,CAAAY,SAAA,GAAgC;QAAhCZ,EAAA,CAAAa,UAAA,YAAAL,GAAA,CAAAtB,eAAA,CAAgC;QAEhCc,EAAA,CAAAY,SAAA,GACF;QADEZ,EAAA,CAAAc,kBAAA,MAAAd,EAAA,CAAAe,WAAA,OAAAP,GAAA,CAAAxB,KAAA,cACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}